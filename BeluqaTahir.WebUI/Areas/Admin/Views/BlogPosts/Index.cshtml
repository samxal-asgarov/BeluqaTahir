@model PagedViewModel<BlogPost>

@{
    ViewData["Title"] = "Index";
}





<h1 style="text-align:center">Blogs Layout</h1>
<div>
    @Model.GetPagenation(Url, "index", "Admin")
</div>
<table class="table table-striped" border="1">
    <thead>
        <tr>

            <th scope="col">Image</th>
            <th scope="col">Title</th>
            <th scope="col">CreateData</th>
            <th>

                <a class="btn btn-success" asp-action="Create">Create New</a>

                <a class="btn btn-warning">Blog Count: @Model.Items.Count()</a>


            </th>

        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.Items)
        {
            <tr>
                <th>
                    <img width="50" height="50" class="img-fluid" src="~/assets/images/@item.ImagePati" />
                </th>
                <td>@item.Title</td>
                <td>@item.CreateData.ToString("d MMMM , yyyy")</td>
                <td>
                    <a class="btn btn-primary" asp-action="Edit" asp-route-id="@item.Id">Edit</a>
                    <a class="btn btn-info" asp-action="Details" asp-route-id="@item.Id">Details</a>
                    <a class="btn btn-danger" onclick="remove(@item.Id, '@item.Title')">Delete</a>
                </td>

            </tr>
        }
    </tbody>
</table>



@section addjs{

    <script src="~/libs/sweetalert/sweetalert.min.js"></script>
    <script src="~/libs/toastr.js/toastr.min.js"></script>


    <script>

        function remove(id, name) {

            swal({
                title: "Eminsiniz?",
                text: `Testik etdiyiniz teqdirde  '${name}' sistemden  silinecek!`,
                type: "warning",
                showCancelButton: true,
                confirmButtonClass: "btn-danger",
                buttons: ["No", "Yes"]
            }).then(
                function (isConfirm) {
                    if (isConfirm) {


                        $.ajax({
                            url: '@Url.Action("Delete")',
                            type: 'POST',
                            data: { id },
                            contentType: 'application/x-www-form-urlencoded', // ne tip  gedecek?   2side model binding rolnu oynayir datani back gondermek ucun isdifade edilir  yeni back gonderilmeye xirmet edilir
                            dataType: 'json',
                    beforeSend: function () {
                        console.log("sorgudan evvel")   // loadir acmaq

                    },
                    success: function (response) {   // sorgunun neticesi ugurlu olsa
                        console.log(response)

                        if (response.error == false) {

                            toastr.success(response.Message, "Ugurludur");
                            window.location.reload();

                        } else {
                            toastr.error(response.Message, "xeta");

                        }
                    },
                            error: function (response) {   // sorgunun neticesi ugursuz olsa
                                console.log(response)
                    },


                }).always(function () {
                         console.log("sorgudan sonra")  //loadir baglamaq

                });

                    }
                });
        };
    </script>
}



@section addcss{
    <link href="~/libs/toastr.js/toastr.css" rel="stylesheet" />
}